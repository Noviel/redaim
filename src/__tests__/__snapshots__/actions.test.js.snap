// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bindActions should bind target to actions 1`] = `
Object {
  "exec1": "special_target",
  "exec2": "special_target",
  "exec3": "special_target",
}
`;

exports[`bindActions should bind trigger to actions 1`] = `
Object {
  "exec1": "TRIGGER",
  "exec2": "TRIGGER",
  "exec3": "TRIGGER",
}
`;

exports[`bindActionsR should bind target to actions 1`] = `
Object {
  "exec1": "special_target",
  "exec2": "special_target",
  "exec3": "special_target",
}
`;

exports[`bindActionsR should bind trigger to actions 1`] = `
Object {
  "exec1": "TRIGGER",
  "exec2": "TRIGGER",
  "exec3": "TRIGGER",
}
`;

exports[`createAction should correctly merge action's properties 1`] = `
Object {
  "meta": Object {
    "exec": "EXEC_TYPE",
    "obj": Object {
      "inner": 10,
    },
    "target": "target",
    "value": 100,
  },
  "payload": Object {
    "data": 10,
  },
  "type": "ACTION_TRIGGER",
}
`;

exports[`createAction should correctly merge custom action's properties 1`] = `
Object {
  "actionOne": Object {
    "customProp": Object {
      "value": 42,
    },
    "meta": Object {
      "exec": "@@REDAIM-ACTION/UNKNOWN",
      "target": "@@REDAIM-TARGET/UNKNOWN",
    },
    "payload": null,
    "type": "@@REDAIM-TRIGGER/UNKNOWN",
  },
  "actionTwo": Object {
    "customProp": Object {
      "value": 42,
    },
    "meta": Object {
      "exec": "@@REDAIM-ACTION/UNKNOWN",
      "target": "@@REDAIM-TARGET/UNKNOWN",
      "val": "meta-val",
    },
    "payload": Object {
      "data": "payload-data",
    },
    "type": "@@REDAIM-TRIGGER/UNKNOWN",
  },
}
`;

exports[`createAction should override action's target 1`] = `"target_override"`;

exports[`createAction should override action's type 1`] = `"TYPE_OVERRIDE"`;

exports[`createAction should return function when called once 1`] = `"function"`;

exports[`createAction should return function when called twice 1`] = `"function"`;

exports[`createAction should return object when called thrice 1`] = `"object"`;

exports[`createAction should set action's meta.target 1`] = `"target"`;

exports[`createAction should set action's type 1`] = `"ACTION_TRIGGER"`;

exports[`createAction should set exec to default value if not specified 1`] = `"@@REDAIM-ACTION/UNKNOWN"`;

exports[`createAction should set target to default value if not specified 1`] = `"@@REDAIM-TARGET/UNKNOWN"`;

exports[`createAction should set trigger to default value if not specified 1`] = `"@@REDAIM-TRIGGER/UNKNOWN"`;

exports[`createActionR should correctly merge action's properties 1`] = `
Object {
  "meta": Object {
    "exec": "EXEC_TYPE",
    "obj": Object {
      "inner": 10,
    },
    "target": "target",
    "value": 100,
  },
  "payload": Object {
    "data": 10,
  },
  "type": "ACTION_TRIGGER",
}
`;

exports[`createActionR should correctly merge custom action's properties 1`] = `
Object {
  "actionOne": Object {
    "customProp": Object {
      "value": 42,
    },
    "meta": Object {
      "exec": "@@REDAIM-ACTION/UNKNOWN",
      "target": "@@REDAIM-TARGET/UNKNOWN",
    },
    "payload": null,
    "type": "@@REDAIM-TRIGGER/UNKNOWN",
  },
  "actionTwo": Object {
    "customProp": Object {
      "value": 42,
    },
    "meta": Object {
      "exec": "@@REDAIM-ACTION/UNKNOWN",
      "target": "@@REDAIM-TARGET/UNKNOWN",
      "val": "meta-val",
    },
    "payload": Object {
      "data": "payload-data",
    },
    "type": "@@REDAIM-TRIGGER/UNKNOWN",
  },
}
`;

exports[`createActionR should override action's target 1`] = `"target_override"`;

exports[`createActionR should override action's type 1`] = `"TYPE_OVERRIDE"`;

exports[`createActionR should return function when called once 1`] = `"function"`;

exports[`createActionR should return function when called twice 1`] = `"function"`;

exports[`createActionR should return object when called thrice 1`] = `"object"`;

exports[`createActionR should set action's meta.target 1`] = `"target"`;

exports[`createActionR should set action's type 1`] = `"ACTION_TRIGGER"`;

exports[`createActionR should set exec to default value if not specified 1`] = `"@@REDAIM-ACTION/UNKNOWN"`;

exports[`createActionR should set target to default value if not specified 1`] = `"@@REDAIM-TARGET/UNKNOWN"`;

exports[`createActionR should set trigger to default value if not specified 1`] = `"@@REDAIM-TRIGGER/UNKNOWN"`;

exports[`createActions should create actions from object with functions as values 1`] = `
Object {
  "exec1": Object {
    "meta": Object {
      "exec": "EXEC1",
      "target": "target",
    },
    "payload": Object {
      "value": 100,
    },
    "type": "TRIGGER",
  },
  "exec2": Object {
    "meta": Object {
      "exec": "EXEC2",
      "target": "target",
    },
    "payload": Object {
      "value1": Object {
        "value": "value",
      },
      "value2": 420,
    },
    "type": "TRIGGER",
  },
}
`;

exports[`createActions should create actions from object with mixed values 1`] = `
Object {
  "exec1": Object {
    "meta": Object {
      "exec": "EXEC1",
      "target": "target",
    },
    "payload": Object {
      "value": "exec1-value",
    },
    "type": "TRIGGER",
  },
  "exec2": Object {
    "meta": Object {
      "exec": "EXEC2",
      "target": "target",
    },
    "payload": "payload",
    "type": "TRIGGER",
  },
}
`;

exports[`createActions should create actions from object with object as values 1`] = `
Object {
  "exec1": Object {
    "meta": Object {
      "exec": "EXEC1",
      "target": "target",
    },
    "payload": Object {
      "value": 1,
    },
    "type": "TRIGGER",
  },
  "exec2": Object {
    "meta": Object {
      "exec": "EXEC2",
      "target": "target",
    },
    "payload": Object {
      "value": 2,
    },
    "type": "TRIGGER",
  },
  "exec3": Object {
    "meta": Object {
      "exec": "EXEC3",
      "target": "target",
    },
    "payload": Object {
      "value": 3,
    },
    "type": "TRIGGER",
  },
}
`;

exports[`createActionsR should create actions from object with functions as values 1`] = `
Object {
  "exec1": Object {
    "meta": Object {
      "exec": "EXEC1",
      "target": "target",
    },
    "payload": Object {
      "value": 100,
    },
    "type": "TRIGGER",
  },
  "exec2": Object {
    "meta": Object {
      "exec": "EXEC2",
      "target": "target",
    },
    "payload": Object {
      "value1": Object {
        "value": "value",
      },
      "value2": 420,
    },
    "type": "TRIGGER",
  },
}
`;

exports[`createActionsR should create actions from object with mixed values 1`] = `
Object {
  "exec1": Object {
    "meta": Object {
      "exec": "EXEC1",
      "target": "target",
    },
    "payload": Object {
      "value": "exec1-value",
    },
    "type": "TRIGGER",
  },
  "exec2": Object {
    "meta": Object {
      "exec": "EXEC2",
      "target": "target",
    },
    "payload": "payload",
    "type": "TRIGGER",
  },
}
`;

exports[`createActionsR should create actions from object with object as values 1`] = `
Object {
  "exec1": Object {
    "meta": Object {
      "exec": "EXEC1",
      "target": "target",
    },
    "payload": Object {
      "value": 1,
    },
    "type": "TRIGGER",
  },
  "exec2": Object {
    "meta": Object {
      "exec": "EXEC2",
      "target": "target",
    },
    "payload": Object {
      "value": 2,
    },
    "type": "TRIGGER",
  },
  "exec3": Object {
    "meta": Object {
      "exec": "EXEC3",
      "target": "target",
    },
    "payload": Object {
      "value": 3,
    },
    "type": "TRIGGER",
  },
}
`;

exports[`wrapActions should correctly apply function with multiple arguments to each action 1`] = `
Object {
  "wrappedActionOne": Object {
    "payload": Object {
      "one": 1,
      "two": "two",
    },
    "type": "ACTION_ONE",
  },
  "wrappedActionTwo": Object {
    "payload": Object {
      "one": Object {
        "value": Object {
          "inner": Object {
            "innerValue": 100,
          },
        },
      },
      "two": null,
    },
    "type": "ACTION_TWO",
  },
}
`;

exports[`wrapActions should correctly apply function with one argument to each action 1`] = `
Object {
  "wrappedActionOne": Object {
    "payload": 10,
    "type": "ACTION_ONE",
  },
  "wrappedActionTwo": Object {
    "payload": Object {
      "value": Object {
        "inner": Object {
          "innerValue": 100,
        },
      },
    },
    "type": "ACTION_TWO",
  },
}
`;

exports[`wrapActions should correctly apply function without arguments to each action 1`] = `
Object {
  "wrappedActionOne": Object {
    "payload": 42,
    "type": "ACTION_ONE",
  },
  "wrappedActionTwo": Object {
    "payload": 42,
    "type": "ACTION_TWO",
  },
}
`;

exports[`wrapActions should return object with functions 1`] = `
Object {
  "ACTION_ONE": "function",
  "ACTION_TWO": "function",
}
`;

exports[`wrapActions should return object with same keys as an input action 1`] = `
Array [
  "ACTION_ONE",
  "ACTION_TWO",
]
`;
